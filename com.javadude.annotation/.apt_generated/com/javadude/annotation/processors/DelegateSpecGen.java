// CODE GENERATED BY JAVADUDE BEAN ANNOTATION PROCESSOR 
// -- DO NOT EDIT  -  THIS CODE WILL BE REGENERATED! --
package com.javadude.annotation.processors;

@javax.annotation.Generated(
    value = "com.javadude.annotation.processors.BeanAnnotationProcessor", 
    date = "Wed Sep 23 15:34:02 EDT 2015", 
    comments = "CODE GENERATED BY JAVADUDE BEAN ANNOTATION PROCESSOR; DO NOT EDIT! THIS CODE WILL BE REGENERATED!")
public abstract class DelegateSpecGen extends com.javadude.annotation.processors.Listener {
    public DelegateSpecGen() {
        ;
    }

    private java.lang.String accessor_;
    public java.lang.String getAccessor() {
        return accessor_;
    }
    public void setAccessor(java.lang.String value)  {
        accessor_ = value;
    }

    private java.lang.String instantiateType_;
    public java.lang.String getInstantiateType() {
        return instantiateType_;
    }
    public void setInstantiateType(java.lang.String value)  {
        instantiateType_ = value;
    }

    private boolean needToDefine_;
    public boolean isNeedToDefine() {
        return needToDefine_;
    }
    public void setNeedToDefine(boolean value)  {
        needToDefine_ = value;
    }


    @Override
    public java.lang.String toString() {
        return getClass().getName() + '[' + paramString() + ']';
    }
    @Override
    protected java.lang.String paramString() {
        return 
               "accessor=" + accessor_ +
               ",instantiateType=" + instantiateType_ +
               ",needToDefine=" + needToDefine_;
    }
}
